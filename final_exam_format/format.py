import re
import sys, os
import codecs
import subprocess
import logging

usage = 'python format.py <input tex> <version_num>'

orig1 = r'''\begin{center} \begin{spacing}{2}$\displaystyle{\mathbb{E}(X_i) = \frac{4}{i} \hspace{10pt} \mbox{VAR}(X_i) = \frac{8}{i^2}}$\end{spacing}\end{center} 
'''

repl1 = r'''\par
{\centering
\begin{spacing}{2}$\displaystyle{\mathbb{E}(X_i) = \frac{4}{i} \hspace{10pt} \mbox{VAR}(X_i) = \frac{8}{i^2}}$\end{spacing}\par
}
'''

def exec_command(cmd):
	q = subprocess.Popen([cmd],
						shell=True,
						stdin=subprocess.PIPE,
						stdout=subprocess.PIPE,
						stderr=subprocess.PIPE)

	result = q.stdout.readlines()
	if result == []:
		error = q.stderr.readlines()
		logging.error(error)
	else:
		logging.info(result)

if __name__ == '__main__':
    #check input arguments
	if len(sys.argv) != 3:
		print '\nusage:\n%s\n'%usage
		exit(-1)

	filename = sys.argv[1]
	#f = codecs.open(filename, encoding='unicode-escape')
	f = open(filename, 'r')
	tex = f.read()

        out_dir = filename[:-4]
	if not os.path.exists(out_dir):
		os.mkdir(out_dir)

	OLDPWD = os.path.dirname(os.path.realpath(__file__))
	os.chdir(out_dir)
	try:

		img_dir = 'imgs'

		image_files = re.findall(r'\\includegraphics.*?{(.*?)}', tex)
		tex = re.sub(r'\\includegraphics(.*?){.*/(.*?)}', r'\\includegraphics\1{%s/\2}'%img_dir, tex)

		username = 'zzhai'
		server = 'webwork.cse.ucsd.edu'
		username_server = "%s@%s" % (username, server)
		if not os.path.exists(img_dir):
			os.mkdir(img_dir)

		if len(image_files) == 1:
			command3 = "scp %s:%s %s" % (username_server, '%s'%(','.join(image_files)), img_dir)
		else:
			command3 = "scp %s:%s %s" % (username_server, '\{%s\}'%(','.join(image_files)), img_dir)
		exec_command(command3)

		tex = tex.replace(r'\def^^M{\ifmmode\else\space\fi\ignorespaces}%', '')
		tex = re.sub(r'\s*\\begin\{multicols\}\{2\}', '', tex)
		tex = re.sub(r'\s*\\end\{multicols\}', '', tex)
		tex = re.sub(r'(\{\\bf ([2-9]|\d{2}).\})', r'\\pagebreak\1', tex)
		tex = re.sub(r'\\leavevmode\\\\\\relax \\leavevmode\\\\\\relax \(Show the.*?\%\%','', tex, 10000, re.DOTALL)
		tex = re.sub(r'\\noindent \{\\large.*?\\linewidth', '', tex, 1000, re.DOTALL)
		
		tex = re.sub(r'\\parbox\[t\]\{[0-9.]+ex\}\{\\hrulefill\}', r'  \\parbox[t]{20ex}{\\hrulefill}  ', tex, 10000)
		tex = re.sub(r'\\medskip\n\\goodbreak\n\\hrule\n\\nobreak\n\\smallskip','',tex)
		# tex = re.sub(r'Answer:',r'\\\\ \\\\ Answer:',tex)
		# tex = re.sub(r'\\par',r'\\\\\\par',tex)
		# tex = re.sub('1 pt','10 pt',tex,10)

		tex = re.sub(r'\\usepackage{amsmath,amsfonts,amssymb,multicol}', 
			r'\\usepackage{amsmath,amsfonts,amssymb,multicol,setspace}',tex, 10000, re.DOTALL)

		tex = tex.replace(r'\noindent {\tiny Generated by \copyright WeBWorK, http://webwork.maa.org, Mathematical Association of America}','')


		# print re.findall(r'({\\pgmlIndent\\let\\pgmlItem=\\pgmlbulletItem(.*?)\\\\\\\\\\par})', tex, re.DOTALL)
		# tex = re.sub(r'({\\pgmlIndent\\let\\pgmlItem=\\pgmlbulletItem(.*?)\\\\\\\\\\par})', r'\\begin{spacing}{2.5}\1\\end{spacing}',tex, 10000, re.DOTALL)

		tex = tex.replace(r'\pgmlRule{100\pgmlPercent}{1\pgmlPixels}%','')

		# print re.findall(r'(\n\s*?(.*?(\\mbox{.*}).*?)\s*?\n)', tex)



#		tex = re.sub(r'( [a-zA-Z]+)\n([a-zA-Z]+ )', r'\1\2', tex, 10000)
#		tex = re.sub(r'(\n.*?(\\mbox{.*}).*?)\s*?\n', r'\\begin{spacing}{2}\1\\end{spacing}', tex, 100)
		tex = tex.replace(r'\parskip=0pt', r'\parskip=10pt')


		# print tex
		# print re.findall(r'((\\vskip\\baselineskip\s*)+)(?=\s*?\\begin{spacing})',tex)
		# tex = re.sub(r'((\\vskip\\baselineskip\s*)+)(?=\s*?\\begin{spacing})','',tex,1000)
		
		tex = re.sub(r'\\pgmlItem{}','\n\n\pgmlItem{}', tex,1000)
		
		# sys.exit(1)
		tex = re.sub(r'\{\\pgmlHeading\{.*?\}.*?\\par\}','', tex, 10000)


		tex = tex.replace(orig1, repl1)


	# print re.findall(r'\s*\\leavevmode\\\\\\relax\s*', tex)
	# tex = re.sub(r'\s*\\leavevmode\\\\\\relax\s*',r'\\\\\\\\\n', tex)

		firstPage = open('../firstPage.tex')
		firstPageTex = firstPage.read()
		firstPage.close()

		a = '\setcounter{page}{1}'
		start = tex.find(a)

		version_num = sys.argv[2]

		tex = tex[:start] + firstPageTex.replace('Final Exam', 'Final Exam, version ' + version_num) + tex[start+len(a):]

		f.close()

		f = open(sys.argv[1], 'w')
		print >> f, tex
		f.close()

		# import subprocess
		# proc = subprocess.call(['pdflatex', filename] )
		os.system('/usr/texbin/pdflatex ' + sys.argv[1])

	except Exception as e:
		print e

	os.chdir(OLDPWD)

	
